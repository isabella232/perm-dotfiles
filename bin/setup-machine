#!/bin/bash

set -eu

# TODO:
# - grant flycut, shiftit, etc accessibility perms
# - add flycut, shiftit, etc to login items

WORKSPACE="${HOME}/workspace"
TAPS=(
  caskroom/cask
  cloudfoundry/tap
  git-duet/tap
)
BREW_PKGS=(
  autojump
  bosh-cli
  cask
  cf-cli
  coreutils
  credhub-cli
  dep
  direnv
  fzf
  git
  git-duet
  go
  htop
  jq
  mariadb
  neovim
  postgres
  protobuf
  python
  python3
  ruby-install
  shellcheck
  signify-osx
  terraform
  the_silver_searcher
  thefuck
  tig
  xhyve
  zsh
  zsh-completions
)
CASK_PKGS=(
  docker-toolbox
  firefox
  flycut
  gogland
  google-chrome
  google-cloud-sdk
  iterm2
  mendeley-desktop
  rubymine
  shiftit
  slack
  textmate
)
SERVICES=(
  mariadb
  postgres
)
REPOS=(
  iredelmeier/vim-config
  pivotal-cf/perm-ci
  pivotal-cf/perm-deployments
  pivotal-cf/perm-rb
  pivotal-cf/perm-release
  pivotal/pivotal_ide_prefs
)
RUBY_VERSIONS=(
  "ruby 2.3.4"
)

is_brew_installed() {
  brew ls --versions "${1}" > /dev/null
}

install_brew() {
  if command -v brew > /dev/null; then
    echo "Homebrew is already installed. Skipping homebrew installation..."
  else
    echo "Homebrew is not installed. Installing homebrew..."
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    echo "Installed homebrew"
  fi
}

brew_packages() {
  echo "Upgrading existing brew packages..."
  brew upgrade
  echo "Upgraded brew packages"

  echo "Installing/upgrading brew packages..."

  for tap in "${TAPS[@]}"; do
    brew tap "${tap}"
  done
  for pkg in "${BREW_PKGS[@]}"; do
    if ! is_brew_installed "${pkg}"; then
      brew reinstall -f "${pkg}"
    fi
  done
  for pkg in "${CASK_PKGS[@]}"; do
    if ! is_brew_installed "${pkg}"; then
      brew cask reinstall -f "${pkg}"
    fi
  done

  echo "Finished installing/upgrading brew packages"
}

start_services() {
  echo "Adding startup services..."
  for service in "${SERVICES[@]}"; do
    brew services start "${service}"
  done
  echo "Added startup services"
}

extra_install_steps() {
  echo "Finalizing dependency installation..."
  install_bbl
  install_lastpass
  setup_fzf
  setup_neovim
  setup_ipython
  setup_ide_prefs
  echo "Finished finalizing dependency installation"
}

setup_defaults() {
  echo "Setting up defaults..."
  # Make zsh the user's default shell
  sudo dscl . -create "/Users/${USER}" UserShell "$(which zsh)"
  echo "Finished setting up defaults"
}

setup_workspace() {
  local repo_name

  echo "Setting up workspace..."
  mkdir -p "${WORKSPACE}"

  for repo in "${REPOS[@]}"; do
    repo_name="$(echo "${repo}" | cut -d "/" -f 2)"
    if [[ ! -e "${WORKSPACE}/${repo_name}" ]]; then
      git clone "git@github.com:${repo}" "${WORKSPACE}/${repo_name}"
    fi
  done

  echo "Finished setting up repos"
}

install_bbl() {
  if ! is_brew_installed bbl; then
    brew install bbl --without-bosh2
  fi
}

install_lastpass() {
  if ! is_brew_installed lastpass-cli; then
    brew install lastpass-cli --with-pinentry
  fi
}

install_ruby() {
  for version in "${RUBY_VERSIONS[@]}"; do
    ruby-install "$version" --no-reinstall
  done
}

setup_fzf() {
  /usr/local/opt/fzf/install --completion --key-bindings --no-update-rc
}

setup_neovim() {
  pip2 install neovim
  pip3 install neovim
}

setup_ipython() {
  pip2 install ipython
  pip3 install ipython
}

setup_ide_prefs() {
  pushd "${WORKSPACE}/pivotal_ide_prefs" > /dev/null
    cli/bin/ide_prefs install --ide=gogland
  popd > /dev/null
}

main() {
  # install_brew
  # brew_packages
  # install_ruby
  setup_workspace
  extra_install_steps
  start_services
  setup_defaults
}

main
